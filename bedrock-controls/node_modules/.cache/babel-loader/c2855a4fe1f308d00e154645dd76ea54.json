{"ast":null,"code":"var _jsxFileName = \"/home/delta12/code/react/bedrock-server-controls/bedrock-controls/src/components/dashboard/Dashboard.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport axios from \"axios\";\nimport Server from './components/Server';\nimport Status from './components/Status';\nimport Connect from './components/Connect';\nimport Players from './components/Players';\nimport Software from './components/Software';\nimport Share from './components/Share';\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onProfileClick = e => {\n      e.preventDefault();\n      alert('Profile Click');\n    };\n\n    this.state = {\n      name: \"Unknown\",\n      status: \"Unknown\",\n      address: \"Unknown\",\n      port: \"Unknown\",\n      onlinePlayers: \"Unknown\",\n      maxPlayers: \"Unknown\",\n      gamemode: \"Unknown\",\n      difficulty: \"Unknown\",\n      seed: \"Unknown\",\n      software: \"Unknown\",\n      version: \"Unknown\",\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/servers/info\", {\n      body: {\n        name: \"Dedicated Server\"\n      }\n    }).then(res => {\n      this.setState({\n        name: res.data.data.name,\n        status: res.data.data.status,\n        address: res.data.data.address,\n        port: res.data.data.port,\n        onlinePlayers: res.data.data.onlinePlayers,\n        maxPlayers: res.data.data.maxPlayers,\n        gamemode: res.data.data.gamemode,\n        difficulty: res.data.data.difficulty,\n        seed: res.data.data.seed,\n        software: res.data.data.software,\n        version: res.data.data.version\n      });\n    }).catch(err => this.setState({\n      error: err.response.data\n    }));\n  }\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navtop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Bedrock Server Controls\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onProfileClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-user-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 51\n      }\n    }), user.username), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onLogoutClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-sign-out-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 50\n      }\n    }), \"Logout\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerCards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Server, {\n      name: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Status, {\n      status: this.state.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Connect, {\n      address: this.state.address,\n      port: this.state.port,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Players, {\n      onlinePlayers: this.state.onlinePlayers,\n      maxPlayers: this.state.maxPlayers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Software, {\n      software: this.state.software,\n      version: this.state.version,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Share, {\n      baseURL: \"http://3.128.29.141\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(Dashboard);","map":{"version":3,"sources":["/home/delta12/code/react/bedrock-server-controls/bedrock-controls/src/components/dashboard/Dashboard.js"],"names":["React","PropTypes","connect","logoutUser","axios","Server","Status","Connect","Players","Software","Share","Dashboard","Component","constructor","onLogoutClick","e","preventDefault","props","onProfileClick","alert","state","name","status","address","port","onlinePlayers","maxPlayers","gamemode","difficulty","seed","software","version","error","componentDidMount","get","body","then","res","setState","data","catch","err","response","render","user","auth","username","propTypes","func","isRequired","object","mapStateToProps","errors"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { logoutUser } from \"../../actions/authActions\"\nimport axios from \"axios\"\n\nimport Server from './components/Server'\nimport Status from './components/Status'\nimport Connect from './components/Connect'\nimport Players from './components/Players'\nimport Software from './components/Software'\nimport Share from './components/Share'\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      name: \"Unknown\",\n      status: \"Unknown\",\n      address: \"Unknown\",\n      port: \"Unknown\",\n      onlinePlayers: \"Unknown\",\n      maxPlayers: \"Unknown\",\n      gamemode: \"Unknown\",\n      difficulty: \"Unknown\",\n      seed: \"Unknown\",\n      software: \"Unknown\",\n      version: \"Unknown\",\n      error: null\n    }\n  }\n\n  onLogoutClick = e => {\n    e.preventDefault()\n    this.props.logoutUser()\n  }\n\n  onProfileClick = e => {\n    e.preventDefault()\n    alert('Profile Click')\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"/api/servers/info\", {\n        body: {\n          name: \"Dedicated Server\"\n        }\n      })\n      .then(res => {\n        this.setState({\n          name: res.data.data.name,\n          status: res.data.data.status,\n          address: res.data.data.address,\n          port: res.data.data.port,\n          onlinePlayers: res.data.data.onlinePlayers,\n          maxPlayers: res.data.data.maxPlayers,\n          gamemode: res.data.data.gamemode,\n          difficulty: res.data.data.difficulty,\n          seed: res.data.data.seed,\n          software: res.data.data.software,\n          version: res.data.data.version\n        })\n      })\n      .catch(err =>\n        this.setState({\n          error: err.response.data\n        })\n      )\n  }\n\n  render() {\n    const { user } = this.props.auth\n    return (\n      <div className=\"appDiv\">\n        <nav className=\"navtop\">\n          <div>\n            <h1>Bedrock Server Controls</h1>\n            <button onClick={this.onProfileClick}><i className=\"fas fa-user-circle\"></i>{user.username}</button>\n            <button onClick={this.onLogoutClick}><i className=\"fas fa-sign-out-alt\"></i>Logout</button>\n          </div>\n        </nav>\n        <div className=\"headerCards\">\n          <Server name={this.state.name}/>\n        </div>\n        <div className=\"cards\">\n          <Status status={this.state.status}/>\n          <Connect address={this.state.address} port={this.state.port}/>\n          <Players onlinePlayers={this.state.onlinePlayers} maxPlayers={this.state.maxPlayers}/>\n          <Software software={this.state.software} version={this.state.version}/>\n          <Share baseURL=\"http://3.128.29.141\"/>\n        </div>\n      </div>\n    )\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n})\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}