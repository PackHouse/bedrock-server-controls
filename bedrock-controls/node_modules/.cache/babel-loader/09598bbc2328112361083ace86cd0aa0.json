{"ast":null,"code":"import _defineProperty from\"/home/delta12/code/react/bedrock-server-controls/bedrock-controls/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/delta12/code/react/bedrock-server-controls/bedrock-controls/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/delta12/code/react/bedrock-server-controls/bedrock-controls/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/delta12/code/react/bedrock-server-controls/bedrock-controls/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/delta12/code/react/bedrock-server-controls/bedrock-controls/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{connect}from\"react-redux\";import{loginUser}from\"../../actions/authActions\";import classnames from\"classnames\";import{Link}from\"react-router-dom\";var Login=/*#__PURE__*/function(_React$Component){_inherits(Login,_React$Component);var _super=_createSuper(Login);function Login(){var _this;_classCallCheck(this,Login);_this=_super.call(this);_this.onChange=function(e){_this.setState(_defineProperty({},e.target.id,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var userData={username:_this.state.username,password:_this.state.password};_this.props.loginUser(userData);// since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n};_this.state={username:\"\",password:\"\",errors:{}};return _this;}_createClass(Login,[{key:\"componentDidMount\",value:function componentDidMount(){// If logged in and user navigates to Register page, should redirect them to dashboard\nif(this.props.auth.isAuthenticated){this.props.history.push(\"/dashboard\");}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.auth.isAuthenticated){this.props.history.push(\"/dashboard\");// push user to dashboard when they login\n}if(nextProps.errors){this.setState({errors:nextProps.errors});}}},{key:\"render\",// fix email and password errors as to not reveal which is incorrect\nvalue:function render(){var errors=this.state.errors;return/*#__PURE__*/React.createElement(\"div\",{className:\"appDiv\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"headerStyle\"},\"Bedrock Server Controls\"),/*#__PURE__*/React.createElement(\"div\",{className:\"login\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Server Login\"),/*#__PURE__*/React.createElement(\"form\",{noValidate:true,onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.username,errors.usernamenotfound),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{onChange:this.onChange,value:this.state.username,error:errors.username,id:\"username\",type:\"text\",placeholder:\"Username\",className:classnames(\"\",{invalid:errors.username||errors.usernamenotfound})})),/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},errors.password,errors.passwordincorrect),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{onChange:this.onChange,value:this.state.password,error:errors.password,id:\"password\",type:\"password\",placeholder:\"Password\",className:classnames(\"\",{invalid:errors.password||errors.passwordincorrect})})),/*#__PURE__*/React.createElement(\"p\",null,\"Don't have an account? \",/*#__PURE__*/React.createElement(Link,{className:\"otherLink\",to:\"/register\"},\"Register\")),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Login\"}))));}}]);return Login;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,errors:state.errors};};export default connect(mapStateToProps,{loginUser:loginUser})(Login);","map":{"version":3,"sources":["/home/delta12/code/react/bedrock-server-controls/bedrock-controls/src/components/auth/Login.js"],"names":["React","connect","loginUser","classnames","Link","Login","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","username","state","password","props","errors","auth","isAuthenticated","history","push","nextProps","usernamenotfound","invalid","passwordincorrect","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { loginUser } from \"../../actions/authActions\"\nimport classnames from \"classnames\"\nimport {Link} from \"react-router-dom\"\n\nclass Login extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    }\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\")\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\") // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      })\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    const userData = {\n      username: this.state.username,\n      password: this.state.password\n    }\n    this.props.loginUser(userData) // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  }\n\n  // fix email and password errors as to not reveal which is incorrect\n  render() {\n    const { errors } = this.state\n\n    return (\n      <div className=\"appDiv\">\n        <h1 className=\"headerStyle\">Bedrock Server Controls</h1>\n        <div className=\"login\">\n          <h1>Server Login</h1>\n          <form noValidate onSubmit={this.onSubmit}>\n            <span className=\"red-text\">\n                  {errors.username}\n                  {errors.usernamenotfound}\n            </span><br />\n            <label>\n              <input\n                onChange={this.onChange}\n                value={this.state.username}\n                error={errors.username}\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"Username\"\n                className={classnames(\"\", {\n                    invalid: errors.username || errors.usernamenotfound\n                  })}\n              />\n            </label>\n            <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n            </span><br />\n            <label>\n              <input\n                onChange={this.onChange}\n                value={this.state.password}\n                error={errors.password}\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n              />\n            </label>\n            <p>Don't have an account? <Link className=\"otherLink\" to=\"/register\">Register</Link></p>\n            <input type=\"submit\" value=\"Login\" />\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n})\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login)\n"]},"metadata":{},"sourceType":"module"}