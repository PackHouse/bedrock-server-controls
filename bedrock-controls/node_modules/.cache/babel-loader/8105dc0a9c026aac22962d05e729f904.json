{"ast":null,"code":"var _jsxFileName = \"/home/delta12/code/react/bedrock-server-controls/bedrock-controls/src/components/auth/Login.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.username,\n        password: this.state.password\n      };\n      this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  // fix email and password errors as to not reveal which is incorrect\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"headerStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Bedrock Server Controls\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Server Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, errors.email, errors.emailnotfound), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.username,\n      error: errors.username,\n      id: \"username\",\n      type: \"text\",\n      placeholder: \"Username\",\n      className: classnames(\"\", {\n        invalid: errors.email || errors.emailnotfound\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, errors.password, errors.passwordincorrect), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      className: classnames(\"\", {\n        invalid: errors.password || errors.passwordincorrect\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/delta12/code/react/bedrock-server-controls/bedrock-controls/src/components/auth/Login.js"],"names":["React","PropTypes","connect","loginUser","classnames","Login","Component","constructor","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","email","state","username","password","props","errors","componentWillReceiveProps","nextProps","auth","isAuthenticated","history","push","render","emailnotfound","invalid","passwordincorrect"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { loginUser } from \"../../actions/authActions\"\nimport classnames from \"classnames\"\n\nclass Login extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\") // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      })\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    const userData = {\n      email: this.state.username,\n      password: this.state.password\n    }\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  }\n\n  // fix email and password errors as to not reveal which is incorrect\n  render() {\n    const { errors } = this.state\n\n    return (\n      <div className=\"appDiv\">\n        <h1 className=\"headerStyle\">Bedrock Server Controls</h1>\n        <div className=\"login\">\n          <h1>Server Login</h1>\n          <form noValidate onSubmit={this.onSubmit}>\n            <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n            </span>\n            <label>\n              <input\n                onChange={this.onChange}\n                value={this.state.username}\n                error={errors.username}\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"Username\"\n                className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n              />\n            </label>\n            <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n            <label>\n              <input\n                onChange={this.onChange}\n                value={this.state.password}\n                error={errors.password}\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n              />\n            </label>\n            <input type=\"submit\" value=\"Login\" />\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}