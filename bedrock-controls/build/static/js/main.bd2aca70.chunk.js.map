{"version":3,"sources":["reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","actions/types.js","store.js","utils/setAuthToken.js","actions/authActions.js","components/LandingPage.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/components/Server.js","components/dashboard/components/StartStop.js","components/dashboard/components/Status.js","components/dashboard/components/Connect.js","components/dashboard/components/Players.js","components/dashboard/components/Software.js","components/dashboard/components/Share.js","components/dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","type","payload","errors","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","LandingPage","className","to","React","Component","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","username","email","password","password2","props","registerUser","history","this","push","nextProps","noValidate","classnames","invalid","placeholder","error","connect","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","usernamenotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","Address","name","StartStop","started","handlestarted","bind","onClick","Status","status","Software","address","port","Players","players","software","version","Share","baseURL","size","level","includeMargin","Dashboard","onLogoutClick","onProfileClick","alert","Server","Connect","jwtToken","currentTime","Date","now","exp","location","href","App","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mTAKMA,EAAUC,EAAQ,IAClBC,EAAe,CACnBC,iBAAiB,EACjBC,KAAM,GACNC,SAAS,GCPLH,EAAe,GCENI,cAAgB,CAC7BC,KFOa,WAAwC,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IGZ4B,mBHa1B,OAAO,2BACFF,GADL,IAEEL,iBAAkBH,EAAQS,EAAOE,SACjCP,KAAMK,EAAOE,UAEjB,IGnBwB,eHoBtB,OAAO,2BACFH,GADL,IAEEH,SAAS,IAEb,QACE,OAAOG,IEpBXI,ODFa,WAAwC,IAA/BJ,EAA8B,uDAAtBN,EAAcO,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IENsB,aFOpB,OAAOD,EAAOE,QAChB,QACE,OAAOH,MGJPK,EAAkBC,OAAOC,sCAAwCC,IAOxDC,EANDC,YACZC,EAHmB,GAKnBN,EAAgBO,YAAgBC,O,kCCGnBC,EAVM,SAAAC,GACfA,EAEFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,eCuCEC,EAAiB,SAAAC,GAC5B,MAAO,CACLnB,KH/C4B,mBGgD5BC,QAASkB,IAYAC,EAAa,kBAAM,SAAAC,GAE9BC,aAAaC,WAAW,YAExBX,GAAa,GAEbS,EAASH,EAAe,OCjDXM,E,uKAbX,OACE,yBAAKC,UAAU,UACb,wBAAIA,UAAU,eAAd,2BACA,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,UAA1B,SACA,kBAAC,IAAD,CAAMD,UAAU,OAAOC,GAAG,aAA1B,kB,GARgBC,IAAMC,W,yBCK1BC,E,kDAEJ,aAAe,IAAD,8BACZ,gBAyBFC,SAAW,SAAAC,GACT,EAAKC,SAAL,eACGD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,SA5Bd,EAgCdC,SAAW,SAAAL,GACTA,EAAEM,iBACF,IAAMC,EAAU,CACdC,SAAU,EAAKzC,MAAMyC,SACrBC,MAAO,EAAK1C,MAAM0C,MAClBC,SAAU,EAAK3C,MAAM2C,SACrBC,UAAW,EAAK5C,MAAM4C,WAExB,EAAKC,MAAMC,aAAaN,EAAS,EAAKK,MAAME,UAtC5C,EAAK/C,MAAQ,CACXyC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXxC,OAAQ,IAPE,E,gEAaR4C,KAAKH,MAAM9C,KAAKJ,iBAClBqD,KAAKH,MAAME,QAAQE,KAAK,gB,gDAIFC,GACpBA,EAAU9C,QACZ4C,KAAKd,SAAS,CACZ9B,OAAQ8C,EAAU9C,W,+BAsBd,IACDA,EAAU4C,KAAKhD,MAAfI,OAEP,OACE,yBAAKuB,UAAU,UACb,wBAAIA,UAAU,eAAd,2BACA,yBAAKA,UAAU,SACb,iDACA,0BAAMwB,YAAU,EAACb,SAAUU,KAAKV,UAC9B,0BAAMX,UAAU,YAAYvB,EAAOqC,UAAgB,6BACnD,+BACE,2BAAOd,UAAWyB,IAAW,GAAI,CAACC,QAASjD,EAAOqC,WAAYT,SAAUgB,KAAKhB,SAAUK,MAAOW,KAAKhD,MAAMyC,SAAUa,YAAY,WAAWC,MAAOnD,EAAOqC,SAAUL,GAAG,WAAWlC,KAAK,UAEvL,0BAAMyB,UAAU,YAAYvB,EAAOsC,OAAa,6BAChD,+BACE,2BAAOf,UAAWyB,IAAW,GAAI,CAACC,QAASjD,EAAOsC,QAASV,SAAUgB,KAAKhB,SAAUK,MAAOW,KAAKhD,MAAM0C,MAAOY,YAAY,QAAQC,MAAOnD,EAAOsC,MAAON,GAAG,QAAQlC,KAAK,WAExK,0BAAMyB,UAAU,YAAYvB,EAAOuC,UAAgB,6BACnD,+BACE,2BAAOhB,UAAWyB,IAAW,GAAI,CAACC,QAASjD,EAAOuC,WAAYX,SAAUgB,KAAKhB,SAAUK,MAAOW,KAAKhD,MAAM2C,SAAUW,YAAY,WAAWC,MAAOnD,EAAOuC,SAAUP,GAAG,WAAWlC,KAAK,cAEvL,0BAAMyB,UAAU,YAAYvB,EAAOwC,WAAiB,6BACpD,+BACE,2BAAOjB,UAAWyB,IAAW,GAAI,CAACC,QAASjD,EAAOwC,YAAaZ,SAAUgB,KAAKhB,SAAUK,MAAOW,KAAKhD,MAAM4C,UAAWU,YAAY,mBAAmBC,MAAOnD,EAAOwC,UAAWR,GAAG,YAAYlC,KAAK,cAEnM,uDAA4B,kBAAC,IAAD,CAAMyB,UAAU,YAAYC,GAAG,UAA/B,UAC5B,2BAAO1B,KAAK,SAASmC,MAAM,oB,GAvEhBR,IAAMC,WAyFd0B,eAJS,SAAAxD,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAId,CAAE0C,aFzFwB,SAACW,EAAUV,GAAX,OAAuB,SAAAxB,GACjDP,IACG0C,KAAK,sBAAuBD,GAC5BE,MAAK,SAAAC,GAAG,OAAIb,EAAQE,KAAK,aACzBY,OAAM,SAAAC,GAAG,OACRvC,EAAS,CACPrB,KHhBkB,aGiBlBC,QAAS2D,EAAIC,SAASC,aEgFfR,CAGbS,YAAWlC,IC7FPmC,E,kDAEJ,aAAe,IAAD,8BACZ,gBA0BFlC,SAAW,SAAAC,GACT,EAAKC,SAAL,eACGD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,SA7Bd,EAiCdC,SAAW,SAAAL,GACTA,EAAEM,iBACF,IAAMkB,EAAW,CACfhB,SAAU,EAAKzC,MAAMyC,SACrBE,SAAU,EAAK3C,MAAM2C,UAEvB,EAAKE,MAAMsB,UAAUV,IArCrB,EAAKzD,MAAQ,CACXyC,SAAU,GACVE,SAAU,GACVvC,OAAQ,IALE,E,gEAWR4C,KAAKH,MAAM9C,KAAKJ,iBAClBqD,KAAKH,MAAME,QAAQE,KAAK,gB,gDAIFC,GACpBA,EAAUnD,KAAKJ,iBACjBqD,KAAKH,MAAME,QAAQE,KAAK,cAEtBC,EAAU9C,QACZ4C,KAAKd,SAAS,CACZ9B,OAAQ8C,EAAU9C,W,+BAqBd,IACAA,EAAW4C,KAAKhD,MAAhBI,OAER,OACE,yBAAKuB,UAAU,UACb,wBAAIA,UAAU,eAAd,2BACA,yBAAKA,UAAU,SACb,4CACA,0BAAMwB,YAAU,EAACb,SAAUU,KAAKV,UAC9B,0BAAMX,UAAU,YACTvB,EAAOqC,SACPrC,EAAOgE,kBAEd,0BAAMzC,UAAU,YACTvB,EAAOuC,SACPvC,EAAOiE,mBAEd,6BACA,+BACE,2BACErC,SAAUgB,KAAKhB,SACfK,MAAOW,KAAKhD,MAAMyC,SAClBc,MAAOnD,EAAOqC,SACdL,GAAG,WACHlC,KAAK,OACLoD,YAAY,WACZ3B,UAAWyB,IAAW,GAAI,CACtBC,QAASjD,EAAOqC,UAAYrC,EAAOgE,sBAI3C,6BACA,+BACE,2BACEpC,SAAUgB,KAAKhB,SACfK,MAAOW,KAAKhD,MAAM2C,SAClBY,MAAOnD,EAAOuC,SACdP,GAAG,WACHlC,KAAK,WACLoD,YAAY,WACZ3B,UAAWyB,IAAW,GAAI,CACtBC,QAASjD,EAAOuC,UAAYvC,EAAOiE,uBAI3C,qDAA0B,kBAAC,IAAD,CAAM1C,UAAU,YAAYC,GAAG,aAA/B,aAC1B,2BAAO1B,KAAK,SAASmC,MAAM,iB,GA3FnBR,IAAMC,WA4GX0B,eAJS,SAAAxD,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAId,CAAE+D,UH9FqB,SAAAV,GAAQ,OAAI,SAAAlC,GACnCP,IACG0C,KAAK,mBAAoBD,GACzBE,MAAK,SAAAC,GAAO,IAGH7C,EAAU6C,EAAII,KAAdjD,MACRS,aAAa8C,QAAQ,WAAYvD,GAEjCD,EAAaC,GAEb,IAAMM,EAAUkD,IAAWxD,GAE3BQ,EAASH,EAAeC,OAEzBwC,OAAM,SAAAC,GAAG,OACRvC,EAAS,CACPrB,KHxCkB,aGyClBC,QAAS2D,EAAIC,SAASC,aG0EfR,CAGbU,G,QC9FaV,eAHS,SAAAxD,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAECyD,EAnBM,SAAC,GAAD,IAAc1B,EAAd,EAAG0C,UAAsBzE,EAAzB,EAAyBA,KAAS0E,EAAlC,2CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAA7B,GAAK,OACc,IAAzB9C,EAAKJ,gBACH,kBAACmC,EAAce,GAEf,kBAAC,IAAD,CAAUjB,GAAG,kBCEN+C,E,uKATX,OACE,yBAAKhD,UAAU,cACb,4BAAKqB,KAAKH,MAAM+B,W,GALF/C,IAAMC,W,QCiDb+C,E,kDA/Cb,aAAe,IAAD,8BACZ,gBACK7E,MAAQ,CACX8E,QAAS,MAEX,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBALT,E,iEASZ,OAAO,O,sCAIPhC,KAAKd,UACH,WACE,OAAGc,KAAKhD,MAAM8E,QACL,CACLA,SAAS,GAIJ,CACLA,SAAS,Q,+BASjB,OAAG9B,KAAKhD,MAAM8E,QAEV,6BACE,4BAAQnD,UAAU,aAAasD,QAASjC,KAAK+B,eAAe,sCAK9D,6BACE,4BAAQpD,UAAU,cAAcsD,QAASjC,KAAK+B,eAAe,2C,GA1C/ClD,IAAMC,WCefoD,E,uKAXX,OACE,6BACE,6BAAK,uCACL,8BAAOlC,KAAKH,MAAMsC,QAClB,kBAAC,EAAD,W,GAPatD,IAAMC,WCcZsD,E,uKAZX,OACE,6BACE,uCACA,8BAAOpC,KAAKH,MAAMwC,SAClB,oCACA,8BAAOrC,KAAKH,MAAMyC,W,GARHzD,IAAMC,WCadyD,E,uKAVX,OACE,6BACE,uCACA,8BAAOvC,KAAKH,MAAM2C,c,GANJ3D,IAAMC,WCebsD,E,uKAZX,OACE,6BACE,wCACA,8BAAOpC,KAAKH,MAAM4C,UAClB,uCACA,8BAAOzC,KAAKH,MAAM6C,c,GARH7D,IAAMC,W,iBC+Bd6D,E,uKApBX,OACE,6BACE,6BACE,+CAEF,6BACE,kBAAC,IAAD,CACEvD,GAAG,UACHC,MAAOW,KAAKH,MAAM+C,QAClBC,KAAM,IACNC,MAAO,IACPC,eAAe,U,GArBPlE,IAAMC,WCSpBkE,E,4MACJC,cAAgB,SAAAhE,GACdA,EAAEM,iBACF,EAAKM,MAAMvB,c,EAGb4E,eAAiB,SAAAjE,GACfA,EAAEM,iBACF4D,MAAM,kB,uDAGE,IACAvG,EAASoD,KAAKH,MAAM9C,KAApBH,KACR,OACE,yBAAK+B,UAAU,UACb,yBAAKA,UAAU,UACb,6BACE,uDACA,4BAAQsD,QAASjC,KAAKkD,gBAAgB,uBAAGvE,UAAU,uBAA0B/B,EAAK6C,UAClF,4BAAQwC,QAASjC,KAAKiD,eAAe,uBAAGtE,UAAU,wBAAlD,YAGJ,yBAAKA,UAAU,eACb,kBAACyE,EAAD,CAAQxB,KAAK,YAEf,yBAAKjD,UAAU,SACb,kBAAC,EAAD,CAAQwD,OAAO,YACf,kBAACkB,EAAD,CAAShB,QAAQ,gBAAgBC,KAAK,UACtC,kBAAC,EAAD,CAASE,QAAQ,gBACjB,kBAAC,EAAD,CAAUC,SAAS,UAAUC,QAAQ,SACrC,kBAAC,EAAD,CAAOE,QAAQ,8B,GA9BD/D,IAAMC,WA4Cf0B,eAHS,SAAAxD,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAIZ,CAAEuB,cAFWkC,CAGbwC,GC5CF,GAAIxE,aAAa8E,SAAU,CAEzB,IAAMvF,EAAQS,aAAa8E,SAC3BxF,EAAaC,GAEb,IAAMM,EAAUkD,IAAWxD,GAE3BN,EAAMc,SAASH,EAAeC,IAE9B,IAAMkF,GAAcC,KAAKC,MAAQ,IAC7BpF,EAAQqF,IAAMH,KAEhB9F,EAAMc,SAASD,KAEfhB,OAAOqG,SAASC,KAAO,W,IAyBZC,G,uKAlBX,OACE,kBAAC,IAAD,CAAUpG,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAKkB,UAAU,UACb,kBAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,IAAIvC,UAAW9C,IACjC,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,SAASvC,UAAWN,IACtC,kBAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,YAAYvC,UAAWzC,IACzC,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAc+E,OAAK,EAACC,KAAK,aAAavC,UAAWwB,Y,GAX7CnE,IAAMC,WCrBlBkF,GAAcC,QACW,cAA7B3G,OAAOqG,SAASO,UAEe,UAA7B5G,OAAOqG,SAASO,UAEhB5G,OAAOqG,SAASO,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT1D,MAAK,SAAA+D,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5H,QACfuH,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5B7D,OAAM,SAAAN,GACLyE,QAAQzE,MAAM,4CAA6CA,MC1FjE6E,IAAS1D,OACP,kBAAC,IAAM2D,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDYnB,SAAkBjB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,GAAwBnI,OAAOqG,SAASC,MACpD8B,SAAWpI,OAAOqG,SAAS+B,OAIvC,OAGFpI,OAAOqI,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMoB,GAAN,sBAEPzB,KAgEV,SAAiCK,EAAOC,GAEtCsB,MAAMvB,EAAO,CACXnG,QAAS,CAAE,iBAAkB,YAE5ByC,MAAK,SAAAI,GAEJ,IAAM8E,EAAc9E,EAAS7C,QAAQ4H,IAAI,gBAEnB,MAApB/E,EAASoB,QACO,MAAf0D,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CxB,UAAUC,cAAcwB,MAAMrF,MAAK,SAAA+D,GACjCA,EAAauB,aAAatF,MAAK,WAC7BrD,OAAOqG,SAASuC,eAKpB9B,GAAgBC,EAAOC,MAG1BzD,OAAM,WACLmE,QAAQC,IACN,oEAvFAkB,CAAwB9B,EAAOC,GAI/BC,UAAUC,cAAcwB,MAAMrF,MAAK,WACjCqE,QAAQC,IACN,iHAMJb,GAAgBC,EAAOC,OCrC/BE,K","file":"static/js/main.bd2aca70.chunk.js","sourcesContent":["import {\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"../actions/types\"\n\nconst isEmpty = require(\"is-empty\")\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      }\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    default:\n      return state\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\"\n\nconst initialState = {}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import { combineReducers } from \"redux\"\nimport authReducer from \"./authReducer\"\nimport errorReducer from \"./errorReducer\"\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n})\n","export const GET_ERRORS = \"GET_ERRORS\"\nexport const USER_LOADING = \"USER_LOADING\"\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"\n","import { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"./reducers\"\n\nconst initialState = {}\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n)\n\nexport default store\n","import axios from \"axios\"\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"]\n  }\n}\n\nexport default setAuthToken\n","import axios from \"axios\"\nimport setAuthToken from \"../utils/setAuthToken\"\nimport jwt_decode from \"jwt-decode\"\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\"\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    )\n}\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data\n      localStorage.setItem(\"jwtToken\", token)\n      // Set token to Auth header\n      setAuthToken(token)\n      // Decode token to get user data\n      const decoded = jwt_decode(token)\n      // Set current user\n      dispatch(setCurrentUser(decoded))\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    )\n}\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  }\n}\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\")\n  // Remove auth header for future requests\n  setAuthToken(false)\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}))\n}\n","import React from 'react'\nimport {Link} from \"react-router-dom\"\n\nclass LandingPage extends React.Component {\n\n  render() {\n    return (\n      <div className=\"appDiv\">\n        <h1 className=\"headerStyle\">Bedrock Server Controls</h1>\n        <div className=\"landing\">\n          <Link className=\"link\" to=\"/login\">Login</Link>\n          <Link className=\"link\" to=\"/register\">Register</Link>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default LandingPage\n","import React from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { registerUser } from \"../../actions/authActions\"\nimport classnames from \"classnames\"\nimport {Link} from \"react-router-dom\"\n\nclass Register extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    }\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\")\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      })\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    const newUser = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    }\n    this.props.registerUser(newUser, this.props.history)\n  }\n\n  render() {\n    const {errors} = this.state\n\n    return (\n      <div className=\"appDiv\">\n        <h1 className=\"headerStyle\">Bedrock Server Controls</h1>\n        <div className=\"login\">\n          <h1>Register New User</h1>\n          <form noValidate onSubmit={this.onSubmit}>\n            <span className=\"red-text\">{errors.username}</span><br />\n            <label>\n              <input className={classnames(\"\", {invalid: errors.username})} onChange={this.onChange} value={this.state.username} placeholder=\"Username\" error={errors.username} id=\"username\" type=\"text\"/>\n            </label>\n            <span className=\"red-text\">{errors.email}</span><br />\n            <label>\n              <input className={classnames(\"\", {invalid: errors.email})} onChange={this.onChange} value={this.state.email} placeholder=\"Email\" error={errors.email} id=\"email\" type=\"email\"/>\n            </label>\n            <span className=\"red-text\">{errors.password}</span><br />\n            <label>\n              <input className={classnames(\"\", {invalid: errors.password})} onChange={this.onChange} value={this.state.password} placeholder=\"Password\" error={errors.password} id=\"password\" type=\"password\"/>\n            </label>\n            <span className=\"red-text\">{errors.password2}</span><br />\n            <label>\n              <input className={classnames(\"\", {invalid: errors.password2})} onChange={this.onChange} value={this.state.password2} placeholder=\"Confirm Password\" error={errors.password2} id=\"password2\" type=\"password\"/>\n            </label>\n            <p>Already have an account? <Link className=\"otherLink\" to=\"/login\">Login</Link></p>\n            <input type=\"submit\" value=\"Register\" />\n          </form>\n        </div>\n      </div>\n    )\n\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n})\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register))\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { loginUser } from \"../../actions/authActions\"\nimport classnames from \"classnames\"\nimport {Link} from \"react-router-dom\"\n\nclass Login extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    }\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\")\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\") // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      })\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    const userData = {\n      username: this.state.username,\n      password: this.state.password\n    }\n    this.props.loginUser(userData) // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  }\n\n  // fix email and password errors as to not reveal which is incorrect\n  render() {\n    const { errors } = this.state\n\n    return (\n      <div className=\"appDiv\">\n        <h1 className=\"headerStyle\">Bedrock Server Controls</h1>\n        <div className=\"login\">\n          <h1>Server Login</h1>\n          <form noValidate onSubmit={this.onSubmit}>\n            <span className=\"red-text\">\n                  {errors.username}\n                  {errors.usernamenotfound}\n            </span>\n            <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n            </span>\n            <br />\n            <label>\n              <input\n                onChange={this.onChange}\n                value={this.state.username}\n                error={errors.username}\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"Username\"\n                className={classnames(\"\", {\n                    invalid: errors.username || errors.usernamenotfound\n                  })}\n              />\n            </label>\n            <br />\n            <label>\n              <input\n                onChange={this.onChange}\n                value={this.state.password}\n                error={errors.password}\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n              />\n            </label>\n            <p>Don't have an account? <Link className=\"otherLink\" to=\"/register\">Register</Link></p>\n            <input type=\"submit\" value=\"Login\" />\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n})\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login)\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n)\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\nexport default connect(mapStateToProps)(PrivateRoute)\n","import React from 'react'\n\nclass Address extends React.Component {\n\n  render() {\n    return (\n      <div className=\"headerCard\">\n        <h1>{this.props.name}</h1>\n      </div>\n    )\n  }\n\n}\n\nexport default Address\n","import React from 'react'\n\nclass StartStop extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      started: null,\n    }\n    this.handlestarted = this.handlestarted.bind(this)\n  }\n\n  componentsDidMount() {\n    return null // get status\n  }\n\n  handlestarted() {\n    this.setState (\n      function() {\n        if(this.state.started) {\n          return {\n            started: false\n          }\n        }\n        else {\n          return {\n            started: true\n          }\n        }\n      }\n    )\n  }\n\n  render() {\n\n    if(this.state.started) {\n      return (\n        <div>\n          <button className=\"stopButton\" onClick={this.handlestarted}><h3>Stop</h3></button>\n        </div>\n    )}\n    else {\n      return (\n        <div>\n          <button className=\"startButton\" onClick={this.handlestarted}><h3>Start</h3></button>\n        </div>\n    )}\n  }\n\n}\n\nexport default StartStop\n","import React from 'react'\nimport StartStop from './StartStop'\n\nclass Status extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <div><h2>Status</h2></div>\n        <code>{this.props.status}</code>\n        <StartStop />\n      </div>\n    )\n  }\n\n}\n\nexport default Status\n","import React from \"react\"\n\nclass Software extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h2>Address</h2>\n        <code>{this.props.address}</code>\n        <h2>Port</h2>\n        <code>{this.props.port}</code>\n      </div>\n    )\n  }\n\n}\n\nexport default Software\n","import React from \"react\"\n\nclass Players extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h2>Players</h2>\n        <code>{this.props.players}</code>\n      </div>\n    )\n  }\n\n}\n\nexport default Players\n","import React from \"react\"\n\nclass Software extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h2>Software</h2>\n        <code>{this.props.software}</code>\n        <h2>Version</h2>\n        <code>{this.props.version}</code>\n      </div>\n    )\n  }\n\n}\n\nexport default Software\n","import React from 'react'\nimport QRCode from 'qrcode.react'\n\nclass Share extends React.Component {\n\n  render() {\n\n    // const styles = {\n    //   justifyContent: 'center',\n    //   alignItems: 'center',\n    //   textAlign: 'center',\n    // }\n\n    return (\n      <div>\n        <div>\n          <h2>Share this app</h2>\n        </div>\n        <div>\n          <QRCode\n            id=\"qr-code\"\n            value={this.props.baseURL}\n            size={120}\n            level={\"H\"}\n            includeMargin={true}\n          />\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Share\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { logoutUser } from \"../../actions/authActions\"\n\nimport Server from './components/Server'\nimport Status from './components/Status'\nimport Connect from './components/Connect'\nimport Players from './components/Players'\nimport Software from './components/Software'\nimport Share from './components/Share'\n\nclass Dashboard extends React.Component {\n  onLogoutClick = e => {\n    e.preventDefault()\n    this.props.logoutUser()\n  }\n\n  onProfileClick = e => {\n    e.preventDefault()\n    alert('Profile Click')\n  }\n\n  render() {\n    const { user } = this.props.auth\n    return (\n      <div className=\"appDiv\">\n        <nav className=\"navtop\">\n          <div>\n            <h1>Bedrock Server Controls</h1>\n            <button onClick={this.onProfileClick}><i className=\"fas fa-user-circle\"></i>{user.username}</button>\n            <button onClick={this.onLogoutClick}><i className=\"fas fa-sign-out-alt\"></i>Logout</button>\n          </div>\n        </nav>\n        <div className=\"headerCards\">\n          <Server name=\"Server\"/>\n        </div>\n        <div className=\"cards\">\n          <Status status=\"Offline\"/>\n          <Connect address=\"192.168.0.100\" port=\"19132\"/>\n          <Players players=\"3/10 Online\"/>\n          <Software software=\"Bedrock\" version=\"1.16\"/>\n          <Share baseURL=\"http://3.128.29.141\"/>\n        </div>\n      </div>\n    )\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard)\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\nimport jwt_decode from \"jwt-decode\"\nimport setAuthToken from \"./utils/setAuthToken\"\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\"\n\nimport LandingPage from './components/LandingPage'\nimport Register from \"./components/auth/Register\"\nimport Login from \"./components/auth/Login\"\nimport PrivateRoute from \"./components/private-route/PrivateRoute\"\nimport Dashboard from \"./components/dashboard/Dashboard\"\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"appDiv\">\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}